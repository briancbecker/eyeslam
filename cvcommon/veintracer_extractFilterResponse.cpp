#include "veintracer.h"

int VeinTracer::extractFilterResponse(const cv::Mat &input, int offX, int offY, int filter)
{
	int resp = 0, v = 0, n = 0;
	switch (filter)
	{
	case 0:
		n = 30;
		offX -= 2; offY -= 3;
		v = (int)input.at<unsigned char>(cv::Point(offX+0, offY+0));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+0, offY+1));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+0, offY+3));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+0, offY+4));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+0));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+1));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+3));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+4));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+2, offY+0));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+2, offY+1));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+2, offY+3));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+2, offY+4));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+0));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+1));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+3));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+4));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+0));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+1));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+3));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+4));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+5, offY+0));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+5, offY+1));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+5, offY+3));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+5, offY+4));
		resp -= v;
		break;
	case 1:
		n = 49;
		offX -= 3; offY -= 3;
		v = (int)input.at<unsigned char>(cv::Point(offX+0, offY+2));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+2));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+3));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+5));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+2, offY+1));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+2, offY+2));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+2, offY+3));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+2, offY+5));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+2, offY+6));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+1));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+2));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+4));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+5));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+1));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+2));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+4));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+5));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+5, offY+0));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+5, offY+1));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+5, offY+3));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+5, offY+4));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+5, offY+5));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+6, offY+3));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+6, offY+4));
		resp -= v;
		break;
	case 2:
		n = 64;
		offX -= 4; offY -= 4;
		v = (int)input.at<unsigned char>(cv::Point(offX+0, offY+5));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+0, offY+6));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+4));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+5));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+7));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+2, offY+3));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+2, offY+4));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+2, offY+6));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+2, offY+7));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+2));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+3));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+5));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+6));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+1));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+2));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+4));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+5));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+5, offY+0));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+5, offY+1));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+5, offY+3));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+5, offY+4));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+6, offY+2));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+6, offY+3));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+7, offY+2));
		resp -= v;
		break;
	case 3:
		n = 49;
		offX -= 3; offY -= 3;
		v = (int)input.at<unsigned char>(cv::Point(offX+0, offY+4));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+1));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+2));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+3));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+4));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+5));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+2, offY+0));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+2, offY+1));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+2, offY+2));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+2, offY+3));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+0));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+1));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+4));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+5));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+2));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+3));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+4));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+5));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+6));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+5, offY+1));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+5, offY+2));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+5, offY+3));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+5, offY+4));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+6, offY+1));
		resp -= v;
		break;
	case 4:
		n = 30;
		offX -= 3; offY -= 2;
		v = (int)input.at<unsigned char>(cv::Point(offX+0, offY+0));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+0, offY+1));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+0, offY+2));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+0, offY+3));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+0, offY+4));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+0, offY+5));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+0));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+1));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+2));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+3));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+4));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+5));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+0));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+1));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+2));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+3));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+4));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+5));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+0));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+1));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+2));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+3));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+4));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+5));
		resp -= v;
		break;
	case 5:
		n = 42;
		offX -= 3; offY -= 3;
		v = (int)input.at<unsigned char>(cv::Point(offX+0, offY+1));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+1));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+2));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+3));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+2, offY+2));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+2, offY+3));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+2, offY+4));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+2, offY+5));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+0));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+1));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+3));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+4));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+0));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+1));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+2));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+5, offY+1));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+5, offY+2));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+5, offY+3));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+5, offY+4));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+6, offY+3));
		resp -= v;
		break;
	case 6:
		n = 64;
		offX -= 4; offY -= 4;
		v = (int)input.at<unsigned char>(cv::Point(offX+0, offY+2));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+2));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+3));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+2, offY+0));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+2, offY+1));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+2, offY+3));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+2, offY+4));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+1));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+2));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+4));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+5));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+2));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+3));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+5));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+6));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+5, offY+3));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+5, offY+4));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+5, offY+6));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+5, offY+7));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+6, offY+4));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+6, offY+5));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+6, offY+7));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+7, offY+5));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+7, offY+6));
		resp -= v << 1;
		break;
	case 7:
		n = 49;
		offX -= 3; offY -= 3;
		v = (int)input.at<unsigned char>(cv::Point(offX+0, offY+3));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+0, offY+4));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+0));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+1));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+3));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+4));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+5));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+2, offY+1));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+2, offY+2));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+2, offY+4));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+2, offY+5));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+1));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+2));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+4));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+5));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+1));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+2));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+3));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+5));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+5, offY+2));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+5, offY+3));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+5, offY+5));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+5, offY+6));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+6, offY+2));
		resp -= v;
		break;
	case 8:
		n = 30;
		offX -= 2; offY -= 3;
		v = (int)input.at<unsigned char>(cv::Point(offX+0, offY+0));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+0, offY+1));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+0, offY+3));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+0, offY+4));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+0));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+1));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+3));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+4));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+2, offY+0));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+2, offY+1));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+2, offY+3));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+2, offY+4));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+0));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+1));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+3));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+4));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+0));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+1));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+3));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+4));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+5, offY+0));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+5, offY+1));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+5, offY+3));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+5, offY+4));
		resp += v;
		break;
	case 9:
		n = 49;
		offX -= 3; offY -= 3;
		v = (int)input.at<unsigned char>(cv::Point(offX+0, offY+2));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+2));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+3));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+5));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+2, offY+1));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+2, offY+2));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+2, offY+3));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+2, offY+5));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+2, offY+6));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+1));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+2));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+4));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+5));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+1));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+2));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+4));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+5));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+5, offY+0));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+5, offY+1));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+5, offY+3));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+5, offY+4));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+5, offY+5));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+6, offY+3));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+6, offY+4));
		resp += v;
		break;
	case 10:
		n = 64;
		offX -= 4; offY -= 4;
		v = (int)input.at<unsigned char>(cv::Point(offX+0, offY+5));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+0, offY+6));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+4));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+5));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+7));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+2, offY+3));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+2, offY+4));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+2, offY+6));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+2, offY+7));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+2));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+3));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+5));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+6));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+1));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+2));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+4));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+5));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+5, offY+0));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+5, offY+1));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+5, offY+3));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+5, offY+4));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+6, offY+2));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+6, offY+3));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+7, offY+2));
		resp += v;
		break;
	case 11:
		n = 49;
		offX -= 3; offY -= 3;
		v = (int)input.at<unsigned char>(cv::Point(offX+0, offY+4));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+1));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+2));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+3));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+4));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+5));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+2, offY+0));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+2, offY+1));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+2, offY+2));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+2, offY+3));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+0));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+1));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+4));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+5));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+2));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+3));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+4));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+5));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+6));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+5, offY+1));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+5, offY+2));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+5, offY+3));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+5, offY+4));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+6, offY+1));
		resp += v;
		break;
	case 12:
		n = 30;
		offX -= 3; offY -= 2;
		v = (int)input.at<unsigned char>(cv::Point(offX+0, offY+0));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+0, offY+1));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+0, offY+2));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+0, offY+3));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+0, offY+4));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+0, offY+5));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+0));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+1));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+2));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+3));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+4));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+5));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+0));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+1));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+2));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+3));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+4));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+5));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+0));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+1));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+2));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+3));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+4));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+5));
		resp += v;
		break;
	case 13:
		n = 42;
		offX -= 3; offY -= 3;
		v = (int)input.at<unsigned char>(cv::Point(offX+0, offY+1));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+1));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+2));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+3));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+2, offY+2));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+2, offY+3));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+2, offY+4));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+2, offY+5));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+0));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+1));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+3));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+4));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+0));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+1));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+2));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+5, offY+1));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+5, offY+2));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+5, offY+3));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+5, offY+4));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+6, offY+3));
		resp += v;
		break;
	case 14:
		n = 64;
		offX -= 4; offY -= 4;
		v = (int)input.at<unsigned char>(cv::Point(offX+0, offY+2));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+2));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+3));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+2, offY+0));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+2, offY+1));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+2, offY+3));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+2, offY+4));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+1));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+2));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+4));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+5));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+2));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+3));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+5));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+6));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+5, offY+3));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+5, offY+4));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+5, offY+6));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+5, offY+7));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+6, offY+4));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+6, offY+5));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+6, offY+7));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+7, offY+5));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+7, offY+6));
		resp += v << 1;
		break;
	case 15:
		n = 49;
		offX -= 3; offY -= 3;
		v = (int)input.at<unsigned char>(cv::Point(offX+0, offY+3));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+0, offY+4));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+0));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+1));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+3));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+4));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+1, offY+5));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+2, offY+1));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+2, offY+2));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+2, offY+4));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+2, offY+5));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+1));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+2));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+4));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+3, offY+5));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+1));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+2));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+3));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+4, offY+5));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+5, offY+2));
		resp += v;
		v = (int)input.at<unsigned char>(cv::Point(offX+5, offY+3));
		resp += v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+5, offY+5));
		resp -= v << 1;
		v = (int)input.at<unsigned char>(cv::Point(offX+5, offY+6));
		resp -= v;
		v = (int)input.at<unsigned char>(cv::Point(offX+6, offY+2));
		resp += v;
		break;
	}

	return resp;
	//return (float)resp / n;
}